1
vsfs
very simple file system
file sys is pure software
data struct of file sys: 
types of on-disk struct utilized by the file sys
to organize its data & metadata
(元数据, data that provides information about other data)
vsfs employ simple structures, 
like arrays of blocks or other objects

2
access methods
how does it map the calls made by a process,
such as open(), read(), write(),
onto its structures?

1 disk sector = 512 byte = 2^9 byte (os 37)
divide disk into blocks
A block, on the other hand, 
is a group of sectors that the operating system 
can address (point to)

* a series of blocks, each of size 4KB = 4(2^10) = 4(1024) = 4096 bytes
/* 
	so BLKSIZE = 4096
uint32_t * bitmap;
diskaddr(uint32_t blockno)
{
	return (char *)(diskmap + blockno * BLKSIZE)
}	
*/
blocks addressed from 0 to N - 1


3
why is inode used?
track information about each file:
1. which data blocks (in the data region)
comprise a file
2. size of file
3. owner & access rights
4. access & modify times 

1. user data (data region), reserve last 56 of 64 blocks
2. inode (index node) is a data structure
in a Unix-style file system that describes
a file-system object such as a file or a directory


inode table:
holds an array of on-disk inodes

256 bytes per inode 
4KB block can hold 16 inodes

track whther inodes or data blocks 
are free or allocated
allocation structures

free list: points to the first free block

instead choose:
bitmap 位映射
is a mapping from some domain
(for example, a range of integers) to bits

each bit is used to indicate whether
the corresponding object/block is free (0) or in-use (1)